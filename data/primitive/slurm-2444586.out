Lmod has detected the following error: The following module(s) are unknown:
"epcc-job-env"

Please check the spelling or version number. Also try "module spider ..."
It is also possible your cache file is out-of-date; it may help to try:
  $ module --ignore-cache load "epcc-job-env"

Also make sure that all modulefiles written in TCL start with the string
#%Module




Warning: You have enabled access to software packages installed
by external parties on ARCHER2 or those that are not fully-supported.
The ARCHER2 CSE service does not test these packages. The service desk
will make reasonable efforts to assist with questions on the use of
these packages but some issues may not be able to be resolved by the
service and they may direct you to seek help from external parties.


printed output filename GaP_HSE06_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:46:51 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.d12
input GaP_HSE06_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.gui
input GaP_HSE06_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_HSE06_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:51:45 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.d3
input GaP_HSE06_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_HSE06_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:51:47 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.d3
input GaP_HSE06_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_HSE06_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_HSE06_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:51:49 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.d12
input GaP_PBE_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.gui
input GaP_PBE_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:52:06 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.d3
input GaP_PBE_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:52:08 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.d3
input GaP_PBE_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE0_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:52:10 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.d12
input GaP_PBE0_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.gui
input GaP_PBE0_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE0_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:01 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.d3
input GaP_PBE0_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBE0_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:04 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.d3
input GaP_PBE0_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBE0_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBE0_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:05 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.d12
input GaP_PBESOL_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.gui
input GaP_PBESOL_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:25 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.d3
input GaP_PBESOL_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:27 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.d3
input GaP_PBESOL_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL0_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:29 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.d12
input GaP_PBESOL0_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.gui
input GaP_PBESOL0_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.f98
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL0_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:54 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.d3
input GaP_PBESOL0_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_bands_/fort.20
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_PBESOL0_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:56 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.d3
input GaP_PBESOL0_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_doss_/fort.20
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_PBESOL0_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_PBESOL0_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_LDA_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:54:59 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.d12
input GaP_LDA_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.gui
input GaP_LDA_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_LDA_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:55:16 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.d3
input GaP_LDA_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_LDA_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:55:18 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.d3
input GaP_LDA_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_LDA_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_LDA_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_M06_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:55:20 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.d12
input GaP_M06_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.gui
input GaP_M06_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_M06_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:21 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.d3
input GaP_M06_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_M06_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:23 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.d3
input GaP_M06_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_M06_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_M06_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_BLYP_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:25 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.d12
input GaP_BLYP_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.gui
input GaP_BLYP_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_BLYP_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:47 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.d3
input GaP_BLYP_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_BLYP_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:51 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.d3
input GaP_BLYP_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_BLYP_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_BLYP_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B3LYP_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:57:53 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.d12
input GaP_B3LYP_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.gui
input GaP_B3LYP_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.xyz
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/fort.9 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.f9
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/fort.98 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.f98
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/SCFOUT.LOG as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.SCFLOG
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/OPTINFO.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.OPTINFO
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/HESSOPT.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.HESSOPT
Files saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_optgeom_/opt* as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.optstory/
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B3LYP_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:59:13 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.d3
input GaP_B3LYP_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.f25
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_bands_/BAND.DAT as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_bands.BAND
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B3LYP_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:59:15 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.d3
input GaP_B3LYP_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.POINTCHG not found or empty.
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.f9, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_doss_/fort.20
File found: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_optgeom.OPTINFO, temporarily saved as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_doss_/OPTINFO.DAT
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B3LYP_doss_/fort.25 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B3LYP_doss.f25
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B2GPPLYP_optgeom.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d12
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d3 && -s ${INPDIR}/${JOBNAME}.d3 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d12' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."
    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 
        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:59:17 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.d12
input GaP_B2GPPLYP_optgeom.d12 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.d3 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.gui
input GaP_B2GPPLYP_optgeom.gui copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.POINTCHG not found or empty.
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_/fort.87 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.ERROR
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_/fort.34 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.gui
File saved: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_/fort.33 as /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.xyz
nid004292
<checkfile0>
#!/bin/bash
JOBNAME=GaP_B2GPPLYP_optgeom
OUTDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive
OUTPUT=GaP_B2GPPLYP_optgeom.out
JOBTMPDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_
cd  /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_optgeom_

## Cat error report to outputs

ls ERROR* > /dev/null 2>&1
if [[ $? == 0 ]]; then
    head ERROR*
    head ERROR* >> ${OUTDIR}/${OUTPUT}
fi

echo " "                                         >> ${OUTDIR}/${OUTPUT}
echo "TEMPORARY          SAVED (in ${OUTDIR})"   >> ${OUTDIR}/${OUTPUT}

## Most important one - fort.9

if [[ -e ${JOBTMPDIR}/fort.9 && -s ${JOBTMPDIR}/fort.9 ]]; then
    MASTER_WITH_PROC_0="YES"
else
    echo 'binary wf (fort.9) is not written on this node' >> ${OUTDIR}/${OUTPUT}
fi

## Read Crystal list

if [[ ${JOBTYPE} == 'crys' ]]; then
    LINE_POSTCRYS=`grep -nw 'POST_CRYS' ${SETFILE}`
    LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"

### Optimisation and scanmode

        elif [[ ${TMP_NAME: -1} == '*' ]]; then
            ls ${JOBTMPDIR}/${TMP_NAME} > /dev/null 2>&1
            if [[ $? == 0 ]]; then
                mkdir ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
                echo "Files saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
            fi
        fi
        LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Read Properties list

if [[ ${JOBTYPE} == 'prop' ]]; then
    LINE_POSTPROP=`grep -nw 'POST_PROP' ${SETFILE}`
    LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
        fi
        LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Calculation summary

echo " "                 >> ${OUTDIR}/${OUTPUT}
echo -n "Disk usage:"    >> ${OUTDIR}/${OUTPUT} 2>&1
# ls -l  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "<du -m>"           >> ${OUTDIR}/${OUTPUT}
du -m  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "</du -m>"          >> ${OUTDIR}/${OUTPUT}
df .   ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1

</checkfile0>
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B2GPPLYP_bands.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_bands_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:59:20 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_bands.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_bands_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_bands.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_bands.d3
input GaP_B2GPPLYP_bands.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_bands.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_bands.POINTCHG not found or empty.
ERROR: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_bands_/fort.9 not found or empty. Check /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.f9
nid004292
<checkfile0>
#!/bin/bash
JOBNAME=GaP_B2GPPLYP_bands
OUTDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive
OUTPUT=GaP_B2GPPLYP_bands.out
JOBTMPDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_bands_
cd  /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_bands_

## Cat error report to outputs

ls ERROR* > /dev/null 2>&1
if [[ $? == 0 ]]; then
    head ERROR*
    head ERROR* >> ${OUTDIR}/${OUTPUT}
fi

echo " "                                         >> ${OUTDIR}/${OUTPUT}
echo "TEMPORARY          SAVED (in ${OUTDIR})"   >> ${OUTDIR}/${OUTPUT}

## Most important one - fort.9

if [[ -e ${JOBTMPDIR}/fort.9 && -s ${JOBTMPDIR}/fort.9 ]]; then
    MASTER_WITH_PROC_0="YES"
else
    echo 'binary wf (fort.9) is not written on this node' >> ${OUTDIR}/${OUTPUT}
fi

## Read Crystal list

if [[ ${JOBTYPE} == 'crys' ]]; then
    LINE_POSTCRYS=`grep -nw 'POST_CRYS' ${SETFILE}`
    LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"

### Optimisation and scanmode

        elif [[ ${TMP_NAME: -1} == '*' ]]; then
            ls ${JOBTMPDIR}/${TMP_NAME} > /dev/null 2>&1
            if [[ $? == 0 ]]; then
                mkdir ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
                echo "Files saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
            fi
        fi
        LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Read Properties list

if [[ ${JOBTYPE} == 'prop' ]]; then
    LINE_POSTPROP=`grep -nw 'POST_PROP' ${SETFILE}`
    LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
        fi
        LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Calculation summary

echo " "                 >> ${OUTDIR}/${OUTPUT}
echo -n "Disk usage:"    >> ${OUTDIR}/${OUTPUT} 2>&1
# ls -l  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "<du -m>"           >> ${OUTDIR}/${OUTPUT}
du -m  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "</du -m>"          >> ${OUTDIR}/${OUTPUT}
df .   ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1

</checkfile0>
mv: cannot stat 'slurm-.out': No such file or directory
printed output filename GaP_B2GPPLYP_doss.out
srun --hint=nomultithread --distribution=block:block
creating temporary directory /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_doss_
<script>
# Generate basic information of output file

OUTDIR=`pwd`
INPDIR=`pwd`

echo "output file: ${OUTDIR}/${OUTPUT}"
cat << EOF > ${OUTDIR}/${OUTPUT}
date:                `date`
hostname:            `hostname`
system:              `uname -a`
user:                `whoami`
input:               ${OUTDIR}/${JOBNAME}.d3
output:              ${OUTDIR}/${OUTPUT}
executable script:   $0
executable:          ${CRYSTAL_TYPE}
Command:             ${CRYCOMMAND}
Slurm JobID:         ${JOBID}
temporary directory: ${JOBTMPDIR}      
EOF

if [[ ! -z ${JOBID} ]]; then
    echo "<squeue -j ${JOBID}>"  >> ${OUTDIR}/${OUTPUT}
    squeue -j ${JOBID}           >> ${OUTDIR}/${OUTPUT} 2>&1
    echo "</squeue -j ${JOBID}>" >> ${OUTDIR}/${OUTPUT}
fi

echo "temporary directory: ${JOBTMPDIR}"

# Prepare input files

## Read list

LINE_PRECALC=`grep -nw 'PRE_CALC' ${SETFILE}`
LINE_PRECALC=`echo "scale=0;${LINE_PRECALC%%:*}+4" | bc`

SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`

## Mandatory files

### d12 and d3

if [[ -e ${INPDIR}/${JOBNAME}.d12 && -s ${INPDIR}/${JOBNAME}.d12 ]]; then
    echo "Error: Properties calculation input identified. Remove it before continuing."
    echo "Exit without calculation."
    exit
fi

while [[ ${TMP_NAME} != 'RESTART' ]]; do
    if [[ -e ${INPDIR}/${JOBNAME}${SAVED_NAME} && -s ${INPDIR}/${JOBNAME}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

        echo "input expected in ${INPDIR}/${JOBNAME}${SAVED_NAME}"
        echo "input data ${INPDIR}/${JOBNAME}${SAVED_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
        if [[ ${SAVED_NAME} == '.d3' ]]; then
            cat ${INPDIR}/${JOBNAME}${SAVED_NAME} >> ${OUTDIR}/${OUTPUT} 2>&1
        fi
        cp ${INPDIR}/${JOBNAME}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
        echo "input ${JOBNAME}${SAVED_NAME} copied."

    else
        echo "Input data ${INPDIR}/${JOBNAME}${SAVED_NAME} not found or empty."
    fi

    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
done

## Restart files

if [[ $# > 1 ]]; then
    PRE_JOB=`echo $2`
    LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
    SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${INPDIR}/${PRE_JOB}${SAVED_NAME} && -s ${INPDIR}/${PRE_JOB}${SAVED_NAME} ]]; then

### Copy files to the main temporary directory

            cp ${INPDIR}/${PRE_JOB}${SAVED_NAME} ${JOBTMPDIR}/${TMP_NAME}
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" >> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File found: ${INPDIR}/${PRE_JOB}${SAVED_NAME}, temporarily saved as ${JOBTMPDIR}/${TMP_NAME}" 

        fi

        LINE_PRECALC=`echo "scale=0;${LINE_PRECALC}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_PRECALC}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

# Most critical one: fort.9 (named as fort.20 now)

if [[ ! -e ${JOBTMPDIR}/fort.20 || ! -s ${JOBTMPDIR}/fort.20 ]]; then
    echo "ERROR: ${JOBTMPDIR}/fort.9 not found or empty. Check ${INPDIR}/${PRE_JOB}.f9"
    exit
else
    mv ${JOBTMPDIR}/fort.20 ${JOBTMPDIR}/fort.9
fi

# Launch calculations

cd ${JOBTMPDIR}
${CRYCOMMAND} >> ${OUTDIR}/${OUTPUT} 2>&1

exit
</script>
DATE START:Thu Oct 13 11:59:20 BST 2022
output file: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_doss.out
temporary directory: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_doss_
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_doss.d12 not found or empty.
input expected in /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_doss.d3
input GaP_B2GPPLYP_doss.d3 copied.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_doss.gui not found or empty.
Input data /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_doss.POINTCHG not found or empty.
ERROR: /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_doss_/fort.9 not found or empty. Check /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/GaP_B2GPPLYP_optgeom.f9
nid004292
<checkfile0>
#!/bin/bash
JOBNAME=GaP_B2GPPLYP_doss
OUTDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive
OUTPUT=GaP_B2GPPLYP_doss.out
JOBTMPDIR=/mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_doss_
cd  /mnt/lustre/a2fs-work2/work/e05/e05/bcamino/aurora/primitive/tmp_GaP_B2GPPLYP_doss_

## Cat error report to outputs

ls ERROR* > /dev/null 2>&1
if [[ $? == 0 ]]; then
    head ERROR*
    head ERROR* >> ${OUTDIR}/${OUTPUT}
fi

echo " "                                         >> ${OUTDIR}/${OUTPUT}
echo "TEMPORARY          SAVED (in ${OUTDIR})"   >> ${OUTDIR}/${OUTPUT}

## Most important one - fort.9

if [[ -e ${JOBTMPDIR}/fort.9 && -s ${JOBTMPDIR}/fort.9 ]]; then
    MASTER_WITH_PROC_0="YES"
else
    echo 'binary wf (fort.9) is not written on this node' >> ${OUTDIR}/${OUTPUT}
fi

## Read Crystal list

if [[ ${JOBTYPE} == 'crys' ]]; then
    LINE_POSTCRYS=`grep -nw 'POST_CRYS' ${SETFILE}`
    LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"

### Optimisation and scanmode

        elif [[ ${TMP_NAME: -1} == '*' ]]; then
            ls ${JOBTMPDIR}/${TMP_NAME} > /dev/null 2>&1
            if [[ $? == 0 ]]; then
                mkdir ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
                echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
                echo "Files saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
            fi
        fi
        LINE_POSTCRYS=`echo "scale=0;${LINE_POSTCRYS}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTCRYS}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Read Properties list

if [[ ${JOBTYPE} == 'prop' ]]; then
    LINE_POSTPROP=`grep -nw 'POST_PROP' ${SETFILE}`
    LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP%%:*}+4" | bc`

    SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
    TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`

    while [[ ! -z ${TMP_NAME} ]]; do
        if [[ -e ${JOBTMPDIR}/${TMP_NAME} && -s ${JOBTMPDIR}/${TMP_NAME} ]]; then
            cp ${JOBTMPDIR}/${TMP_NAME} ${OUTDIR}/${JOBNAME}${SAVED_NAME}
            echo ${TMP_NAME} ${JOBNAME}${SAVED_NAME} | awk '{printf("%-18s %-18s"),$1,$2}' >> ${OUTDIR}/${OUTPUT} 2>&1
            ls -l ${OUTDIR}/${JOBNAME}${SAVED_NAME} | awk '{printf("%-8s %s %s %s\n"),$5,$6,$7,$8}'>> ${OUTDIR}/${OUTPUT} 2>&1
            echo "File saved: ${JOBTMPDIR}/${TMP_NAME} as ${OUTDIR}/${JOBNAME}${SAVED_NAME}"
        fi
        LINE_POSTPROP=`echo "scale=0;${LINE_POSTPROP}+1" | bc`
        SAVED_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $1)}' ${SETFILE} | sed 's/.\{7\}//'`
        TMP_NAME=`awk 'NR=="'${LINE_POSTPROP}'"{printf("%s", $2)}' ${SETFILE}`
    done
fi

## Calculation summary

echo " "                 >> ${OUTDIR}/${OUTPUT}
echo -n "Disk usage:"    >> ${OUTDIR}/${OUTPUT} 2>&1
# ls -l  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "<du -m>"           >> ${OUTDIR}/${OUTPUT}
du -m  ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1
echo "</du -m>"          >> ${OUTDIR}/${OUTPUT}
df .   ${JOBTMPDIR}      >> ${OUTDIR}/${OUTPUT} 2>&1

</checkfile0>
mv: cannot stat 'slurm-.out': No such file or directory
